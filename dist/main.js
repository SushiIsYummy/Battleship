/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/audio/audioUtils.js":(e,r,t)=>{t.r(r),t.d(r,{playExplosionSound:()=>o,playMissSound:()=>n});var a=t("./src/audio/boom.mp3"),l=t("./src/audio/miss-sound.mp3");function o(){let e=new Audio(a);e.volume=.2,e.play()}function n(){new Audio(l).play()}},"./src/data/ShipData.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>a});const a=[{name:"carrier",length:5,orientation:null,row:null,col:null},{name:"battleship",length:4,orientation:null,row:null,col:null},{name:"cruiser",length:3,orientation:null,row:null,col:null},{name:"submarine",length:3,orientation:null,row:null,col:null},{name:"destroyer",length:2,orientation:null,row:null,col:null}]},"./src/js/DOM/addMarkerOnGameboard.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>a});const a=function(e,r,t,a,l){let o=e.cellHitInfo(t,a),n=document.querySelector(`.${r}`).querySelector(`.cell[data-row="${t}"][data-col="${a}"]`);if(!1!==o){let e=function(){let e=20;const r=document.createElementNS("http://www.w3.org/2000/svg","svg");r.setAttribute("width",`${e}`),r.setAttribute("height",`${e}`),r.classList.add("hit-marker");const t=document.createElementNS("http://www.w3.org/2000/svg","circle");return t.setAttribute("cx",""+e/2),t.setAttribute("cy",""+e/2),t.setAttribute("r",""+e/2),r.appendChild(t),r}();e.classList.add(l),n.appendChild(e)}}},"./src/js/DOM/createGameboardGrid.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>a});const a=function(e,r,t){let a=e.getSize();console.log(r);let l=document.querySelector(`.${r}`);console.log(l);for(let e=0;e<a;e++)for(let r=0;r<a;r++){let a=document.createElement("div");a.classList.add("cell"),a.classList.add(t),a.dataset.row=e,a.dataset.col=r,l.appendChild(a)}}},"./src/js/DOM/renderShipsOnGameboard.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>a});const a=function(e,r){const t=document.querySelector(`.${r}`),a=e.getSize(),l=e.getBoard();for(let e=0;e<a;e++)for(let r=0;r<a;r++){let a=l[e][r];if(null!==a){t.querySelector(`.cell[data-row="${e}"][data-col="${r}"]`).dataset.shipName=a.name}}}},"./src/js/factories/Gameboard.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>a});const a=function(){let e=10,r=Array(e).fill().map((()=>Array(e).fill(null))),t=Array(e).fill().map((()=>Array(e).fill(!1))),a=[];return{receiveAttack(e,a){if(!1!==t[e][a])return;let l=r[e][a];null!==l?(l.hit(e,a),t[e][a]="hit"):t[e][a]="miss"},placeShip(t,l){if(function(t){const{length:a,row:l,col:o,orientation:n}=t;if("horizontal"===n&&o+a>e||"vertical"===n&&l+a>e)return!1;if("horizontal"===n){for(let e=0;e<a;e++)if(null!=r[l][o+e])return!1}else if("vertical"===n)for(let e=0;e<a;e++)if(null!=r[l+e][o])return!1;return!0}(l)){const{row:e,col:o,name:n,length:s,orientation:i}=l;if("horizontal"===i)for(let l=0;l<s;l++)r[e][o+l]=t,a.push(t);else if("vertical"===i)for(let l=0;l<s;l++)r[e+l][o]=t,a.push(t);return!0}return!1},allShipsSunk(){for(let e=0;e<a.length;e++)if(!a[e].isSunk())return!1;return!0},getSize:()=>e,getBoard:()=>r,getBoardHits:()=>JSON.parse(JSON.stringify(t)),cellHitInfo:(e,r)=>t[e][r],displayBoard(){console.table(r)}}}},"./src/js/factories/Player.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>a});const a=function(e){let r=Array(e.getSize()).fill().map((()=>Array(e.getSize()).fill(!0)));return{gameboard:e,attack(e,t,a){if(this.hasAvailableHit(t,a)){e.gameboard.receiveAttack(t,a),r[t][a]=!1}},hasAvailableHit:(e,t)=>r[e][t],getRemainingAvailableHits(){let e=[];for(let t=0;t<r.length;t++)for(let a=0;a<r.length;a++)this.hasAvailableHit(t,a)&&e.push({row:t,col:a});return e}}}},"./src/js/factories/Ship.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>a});const a=function(e,r){let t=0,a=[];return{name:e,length:r,hit(e,r){a.push({row:e,col:r}),t++},isSunk(){return t>=this.length},getPositions:()=>JSON.parse(JSON.stringify(a))}}},"./src/js/gameplay.js":(e,r,t)=>{t.r(r),t.d(r,{initializeGame:()=>f});var a=t("./src/js/DOM/createGameboardGrid.js"),l=t("./src/js/utils/gameboardUtils.js"),o=t("./src/js/DOM/renderShipsOnGameboard.js"),n=t("./src/js/DOM/addMarkerOnGameboard.js"),s=t("./src/js/factories/Gameboard.js"),i=t("./src/js/factories/Player.js"),c=t("./src/audio/audioUtils.js");const d=(0,s.default)(),u=(0,s.default)(),p={playerBoard:d,enemyBoard:u,player:(0,i.default)(d),enemy:(0,i.default)(u),currentPlayer:null,switchPlayer(){this.currentPlayer===this.player?this.currentPlayer=this.enemy:this.currentPlayer===this.enemy&&(this.currentPlayer=this.player)},gameOver:!1};function f(){Math.round(Math.random());p.currentPlayer=p.player,(0,a.default)(p.playerBoard,"player-board","player-cell"),(0,a.default)(p.enemyBoard,"enemy-board","enemy-cell"),(0,l.placeShipsRandomly)(p.playerBoard),(0,l.placeShipsRandomly)(p.enemyBoard),(0,o.default)(p.playerBoard,"player-board"),function(){const e=document.querySelector(".enemy-board");e.addEventListener("click",(e=>{if(y())return void console.log("GAME IS OVER!!!");let r=e.target;if(r.classList.contains("enemy-cell")){let e=Number(r.dataset.row),t=Number(r.dataset.col);if(console.log(`available hit: ${p.player.hasAvailableHit(e,t)}`),console.log(p.currentPlayer===p.player),p.currentPlayer===p.player&&!p.gameOver&&p.player.hasAvailableHit(e,t))if(console.log(e,t),p.player.attack(p.enemy,e,t),"hit"===p.enemyBoard.cellHitInfo(e,t)){(0,c.playExplosionSound)(),(0,n.default)(p.enemyBoard,"enemy-board",e,t,"hit");let r=p.enemyBoard.getBoard()[e][t];if(console.log(r),r.isSunk()&&function(e){let r=e.getPositions();for(let t=0;t<r.length;t++){console.log(r[t].row,r[t].col),document.querySelector(`.enemy-cell[data-row="${r[t].row}"][data-col="${r[t].col}"]`).dataset.shipName=e.name}}(r),y())return void console.log("GAME IS OVER!!!")}else"miss"===p.enemyBoard.cellHitInfo(e,t)&&((0,c.playMissSound)(),(0,n.default)(p.enemyBoard,"enemy-board",e,t,"miss"),m(),p.switchPlayer())}}))}(),p.playerBoard.displayBoard(),console.table(p.enemyBoard.getBoardHits()),console.table(p.enemyBoard.displayBoard()),console.table(p.enemyBoard.getBoardHits())}function m(){let e=p.enemy.getRemainingAvailableHits(),r=Math.floor(Math.random()*e.length);console.log(r),console.log(e);let{row:t,col:a}=e.splice(r,1)[0];p.enemy.attack(p.player,t,a),"hit"===p.playerBoard.cellHitInfo(t,a)?((0,n.default)(p.playerBoard,"player-board",t,a,"hit"),(0,c.playExplosionSound)(),console.log("ENEMY HIT!"),m()):"miss"===p.playerBoard.cellHitInfo(t,a)&&(console.log("ENEMY MISS!"),(0,c.playMissSound)(),(0,n.default)(p.playerBoard,"player-board",t,a,"miss"),p.switchPlayer()),console.log("ENEMY ATTACK!")}function y(){return p.playerBoard.allShipsSunk()||p.enemyBoard.allShipsSunk()}},"./src/js/utils/gameboardUtils.js":(e,r,t)=>{t.r(r),t.d(r,{addHitMarker:()=>n,addMissMarker:()=>s,placeShipsRandomly:()=>o});var a=t("./src/data/ShipData.js"),l=t("./src/js/factories/Ship.js");function o(e){a.default.forEach((r=>{let t=(0,l.default)(r.name,r.length),a={...r};do{let r=Math.floor(Math.random()*(e.getSize()-0)+0),t=Math.floor(Math.random()*(e.getSize()-0)+0),l=Math.round(Math.random())?"horizontal":"vertical";a.row=r,a.col=t,a.orientation=l,console.log(a)}while(!0!==e.placeShip(t,a))}))}function n(e,r,t){}function s(e,r,t){}},"./src/css/styles.css":(e,r,t)=>{t.r(r)},"./src/audio/boom.mp3":(e,r,t)=>{e.exports=t.p+"b9c69bc988aeb9bf35ca.mp3"},"./src/audio/miss-sound.mp3":(e,r,t)=>{e.exports=t.p+"74280d6f23dc4aa34b60.mp3"}},r={};function t(a){var l=r[a];if(void 0!==l)return l.exports;var o=r[a]={exports:{}};return e[a](o,o.exports,t),o.exports}t.d=(e,r)=>{for(var a in r)t.o(r,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:r[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var r=t.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var a=r.getElementsByTagName("script");if(a.length)for(var l=a.length-1;l>-1&&!e;)e=a[l--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var a={};(()=>{t.r(a);t("./src/js/DOM/addMarkerOnGameboard.js"),t("./src/js/DOM/createGameboardGrid.js"),t("./src/js/DOM/renderShipsOnGameboard.js"),t("./src/js/factories/Gameboard.js"),t("./src/js/factories/Player.js"),t("./src/js/factories/Ship.js");var e=t("./src/js/gameplay.js");t("./src/js/utils/gameboardUtils.js"),t("./src/css/styles.css");(0,e.initializeGame)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,